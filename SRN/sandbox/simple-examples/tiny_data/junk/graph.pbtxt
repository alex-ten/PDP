node {
  name: "Train/TrainInput/raw_data"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000\000\000\000\000\001\000\000\000\006\000\000\000\003\000\000\000\000\000\000\000\004\000\000\000\002\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\007\000\000\000\005\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/TrainInput/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Train/TrainInput/floordiv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Train/TrainInput/floordiv"
  op: "Div"
  input: "Train/TrainInput/Size"
  input: "Train/TrainInput/floordiv/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Train/TrainInput/mul"
  op: "Mul"
  input: "Train/TrainInput/mul/x"
  input: "Train/TrainInput/floordiv"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/TrainInput/strided_slice/pack_1"
  op: "Pack"
  input: "Train/TrainInput/mul"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/TrainInput/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/TrainInput/strided_slice"
  op: "StridedSlice"
  input: "Train/TrainInput/raw_data"
  input: "Train/TrainInput/strided_slice/pack"
  input: "Train/TrainInput/strided_slice/pack_1"
  input: "Train/TrainInput/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/TrainInput/Reshape/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Train/TrainInput/Reshape/shape"
  op: "Pack"
  input: "Train/TrainInput/Reshape/shape/0"
  input: "Train/TrainInput/floordiv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/TrainInput/Reshape"
  op: "Reshape"
  input: "Train/TrainInput/strided_slice"
  input: "Train/TrainInput/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/TrainInput/sub"
  op: "Sub"
  input: "Train/TrainInput/floordiv"
  input: "Train/TrainInput/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/floordiv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Train/TrainInput/floordiv_1"
  op: "Div"
  input: "Train/TrainInput/sub"
  input: "Train/TrainInput/floordiv_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Less"
  op: "Less"
  input: "Train/TrainInput/assert_positive/Const"
  input: "Train/TrainInput/floordiv_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/All"
  op: "All"
  input: "Train/TrainInput/assert_positive/assert_less/Less"
  input: "Train/TrainInput/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "Train/TrainInput/assert_positive/assert_less/All"
  input: "Train/TrainInput/assert_positive/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "Train/TrainInput/assert_positive/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
  input: "^Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "epoch_size == 0, decrease batch_size or num_steps"
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise: x = "
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/TrainInput/floordiv_1:0"
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "Train/TrainInput/assert_positive/assert_less/All"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/TrainInput/assert_positive/assert_less/All"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "Train/TrainInput/floordiv_1"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/TrainInput/floordiv_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_2"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  input: "^Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/epoch_size"
  op: "Identity"
  input: "Train/TrainInput/floordiv_1"
  input: "^Train/TrainInput/assert_positive/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/input_producer/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/input_producer/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/input_producer/range"
  op: "Range"
  input: "Train/input_producer/range/start"
  input: "Train/epoch_size"
  input: "Train/input_producer/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/input_producer/fraction_of_32_full/fraction_of_32_full"
  op: "FIFOQueue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/input_producer/fraction_of_32_full/fraction_of_32_full_EnqueueMany"
  op: "QueueEnqueueMany"
  input: "Train/input_producer/fraction_of_32_full/fraction_of_32_full"
  input: "Train/input_producer/range"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "Train/input_producer/fraction_of_32_full/fraction_of_32_full_Close"
  op: "QueueClose"
  input: "Train/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "Train/input_producer/fraction_of_32_full/fraction_of_32_full_Close_1"
  op: "QueueClose"
  input: "Train/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "Train/input_producer/fraction_of_32_full/fraction_of_32_full_Size"
  op: "QueueSize"
  input: "Train/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/input_producer/fraction_of_32_full/Cast"
  op: "Cast"
  input: "Train/input_producer/fraction_of_32_full/fraction_of_32_full_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/input_producer/fraction_of_32_full/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "Train/input_producer/fraction_of_32_full/mul"
  op: "Mul"
  input: "Train/input_producer/fraction_of_32_full/Cast"
  input: "Train/input_producer/fraction_of_32_full/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/input_producer/fraction_of_32_full/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "queue/Train/input_producer/fraction_of_32_full/fraction_of_32_full/Train/input_producer/"
      }
    }
  }
}
node {
  name: "Train/input_producer/fraction_of_32_full/ScalarSummary"
  op: "ScalarSummary"
  input: "Train/input_producer/fraction_of_32_full/ScalarSummary/tags"
  input: "Train/input_producer/fraction_of_32_full/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/fraction_of_32_full_Dequeue"
  op: "QueueDequeue"
  input: "Train/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "Train/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Train/mul"
  op: "Mul"
  input: "Train/fraction_of_32_full_Dequeue"
  input: "Train/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Slice/begin/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Slice/begin"
  op: "Pack"
  input: "Train/Slice/begin/0"
  input: "Train/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Slice"
  op: "Slice"
  input: "Train/TrainInput/Reshape"
  input: "Train/Slice/begin"
  input: "Train/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Train/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Train/mul_1"
  op: "Mul"
  input: "Train/fraction_of_32_full_Dequeue"
  input: "Train/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/add"
  op: "Add"
  input: "Train/mul_1"
  input: "Train/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Slice_1/begin/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Slice_1/begin"
  op: "Pack"
  input: "Train/Slice_1/begin/0"
  input: "Train/add"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Slice_1"
  op: "Slice"
  input: "Train/TrainInput/Reshape"
  input: "Train/Slice_1/begin"
  input: "Train/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros"
  op: "Fill"
  input: "Train/Model/pack"
  input: "Train/Model/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros_1"
  op: "Fill"
  input: "Train/Model/pack_1"
  input: "Train/Model/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros_2"
  op: "Fill"
  input: "Train/Model/pack_2"
  input: "Train/Model/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros_3"
  op: "Fill"
  input: "Train/Model/pack_3"
  input: "Train/Model/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros_4"
  op: "Fill"
  input: "Train/Model/pack_4"
  input: "Train/Model/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/pack_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/zeros_5"
  op: "Fill"
  input: "Train/Model/pack_5"
  input: "Train/Model/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Model/embedding"
  op: "Variable"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 10
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/min"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/max"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/embedding/Initializer/random_uniform/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/embedding/Initializer/random_uniform/max"
  input: "Model/embedding/Initializer/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/embedding/Initializer/random_uniform/RandomUniform"
  input: "Model/embedding/Initializer/random_uniform/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Model/embedding/Initializer/random_uniform"
  op: "Add"
  input: "Model/embedding/Initializer/random_uniform/mul"
  input: "Model/embedding/Initializer/random_uniform/min"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Model/embedding/Assign"
  op: "Assign"
  input: "Model/embedding"
  input: "Model/embedding/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/embedding/read"
  op: "Identity"
  input: "Model/embedding"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/embedding_lookup"
  op: "Gather"
  input: "Model/embedding/read"
  input: "Train/Slice"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/embedding_lookup"
  input: "Train/Model/RNN/strided_slice/pack"
  input: "Train/Model/RNN/strided_slice/pack_1"
  input: "Train/Model/RNN/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/strided_slice"
  input: "Train/Model/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/zeros"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  input: "Train/Model/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/zeros_2"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 20
        }
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\024\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/max"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/RandomUniform"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  op: "Add"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/mul"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  input: "Train/Model/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 40
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/read"
  op: "Identity"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/zeros_4"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_1"
  op: "StridedSlice"
  input: "Train/Model/embedding_lookup"
  input: "Train/Model/RNN/strided_slice_1/pack"
  input: "Train/Model/RNN/strided_slice_1/pack_1"
  input: "Train/Model/RNN/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/strided_slice_1"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/RNN/strided_slice_2"
  op: "StridedSlice"
  input: "Train/Model/embedding_lookup"
  input: "Train/Model/RNN/strided_slice_2/pack"
  input: "Train/Model/RNN/strided_slice_2/pack_1"
  input: "Train/Model/RNN/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/strided_slice_2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split"
  op: "Split"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split/split_dim"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split:2"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2"
  op: "Add"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_1"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/concat"
  op: "Concat"
  input: "Train/Model/concat/concat_dim"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/Reshape"
  op: "Reshape"
  input: "Train/Model/concat"
  input: "Train/Model/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_w"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/softmax_w/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/softmax_w/Initializer/random_uniform/max"
  input: "Model/softmax_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/softmax_w/Initializer/random_uniform/RandomUniform"
  input: "Model/softmax_w/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_w/Initializer/random_uniform"
  op: "Add"
  input: "Model/softmax_w/Initializer/random_uniform/mul"
  input: "Model/softmax_w/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_w/Assign"
  op: "Assign"
  input: "Model/softmax_w"
  input: "Model/softmax_w/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/softmax_w/read"
  op: "Identity"
  input: "Model/softmax_w"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_b"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Model/softmax_b/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Model/softmax_b/Initializer/random_uniform/max"
  input: "Model/softmax_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Model/softmax_b/Initializer/random_uniform/RandomUniform"
  input: "Model/softmax_b/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_b/Initializer/random_uniform"
  op: "Add"
  input: "Model/softmax_b/Initializer/random_uniform/mul"
  input: "Model/softmax_b/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Model/softmax_b/Assign"
  op: "Assign"
  input: "Model/softmax_b"
  input: "Model/softmax_b/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/softmax_b/read"
  op: "Identity"
  input: "Model/softmax_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/MatMul"
  op: "MatMul"
  input: "Train/Model/Reshape"
  input: "Model/softmax_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/add"
  op: "Add"
  input: "Train/Model/MatMul"
  input: "Model/softmax_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/Reshape_1"
  op: "Reshape"
  input: "Train/Slice_1"
  input: "Train/Model/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/ones"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/sequence_loss_by_example/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/sequence_loss_by_example/Reshape"
  op: "Reshape"
  input: "Train/Model/Reshape_1"
  input: "Train/Model/sequence_loss_by_example/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "Train/Model/add"
  input: "Train/Model/sequence_loss_by_example/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/sequence_loss_by_example/mul"
  op: "Mul"
  input: "Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "Train/Model/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/sequence_loss_by_example/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Train/Model/sequence_loss_by_example/add"
  op: "Add"
  input: "Train/Model/ones"
  input: "Train/Model/sequence_loss_by_example/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/sequence_loss_by_example/truediv"
  op: "Div"
  input: "Train/Model/sequence_loss_by_example/mul"
  input: "Train/Model/sequence_loss_by_example/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/Sum"
  op: "Sum"
  input: "Train/Model/sequence_loss_by_example/truediv"
  input: "Train/Model/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.0
      }
    }
  }
}
node {
  name: "Train/Model/truediv"
  op: "Div"
  input: "Train/Model/Sum"
  input: "Train/Model/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/Variable/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Train/Model/Variable"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Train/Model/Variable/Assign"
  op: "Assign"
  input: "Train/Model/Variable"
  input: "Train/Model/Variable/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/Variable/read"
  op: "Identity"
  input: "Train/Model/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Fill"
  op: "Fill"
  input: "Train/Model/gradients/Shape"
  input: "Train/Model/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/truediv_grad/Shape"
  input: "Train/Model/gradients/Train/Model/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/truediv"
  op: "Div"
  input: "Train/Model/gradients/Fill"
  input: "Train/Model/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/truediv_grad/truediv"
  input: "Train/Model/gradients/Train/Model/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/truediv_grad/Sum"
  input: "Train/Model/gradients/Train/Model/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/Neg"
  op: "Neg"
  input: "Train/Model/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/Square"
  op: "Square"
  input: "Train/Model/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/truediv_1"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/truediv_grad/Neg"
  input: "Train/Model/gradients/Train/Model/truediv_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Fill"
  input: "Train/Model/gradients/Train/Model/truediv_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/truediv_grad/mul"
  input: "Train/Model/gradients/Train/Model/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/truediv_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Sum_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/truediv_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Sum_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Sum_grad/Tile"
  op: "Tile"
  input: "Train/Model/gradients/Train/Model/Sum_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/Sum_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Shape"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/truediv"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/Sum_grad/Tile"
  input: "Train/Model/sequence_loss_by_example/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/truediv"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Sum"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Neg"
  op: "Neg"
  input: "Train/Model/sequence_loss_by_example/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Square"
  op: "Square"
  input: "Train/Model/sequence_loss_by_example/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/truediv_1"
  op: "Div"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Neg"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/Sum_grad/Tile"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/mul"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Reshape"
  input: "Train/Model/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/truediv_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/zeros_like"
  op: "ZerosLike"
  input: "Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "Train/Model/gradients/Train/Model/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "Train/Model/gradients/Train/Model/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/add_grad/Reshape"
  input: "Model/softmax_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/Reshape"
  input: "Train/Model/gradients/Train/Model/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\036\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/Reshape_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/concat_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/concat_grad/Shape_1"
  input: "Train/Model/gradients/Train/Model/concat_grad/Shape_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/Reshape_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/Reshape_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/concat_grad/Slice_2"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/Reshape_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/concat_grad/ConcatOffset:2"
  input: "Train/Model/gradients/Train/Model/concat_grad/Shape_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/concat_grad/Slice_2"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/concat_grad/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split/split_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Reshape"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Slice"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/concat_grad/Slice_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_1"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split/split_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split/split_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Reshape"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Reshape"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Slice"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_2"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Slice_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN_2"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_3"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/concat_grad/Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat_grad/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN_3"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_4"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_4"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_4"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_5"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_5"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_5"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/zeros_4"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split/split_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split/split_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Reshape"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Reshape"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Reshape"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_6"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Reshape_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_grad/Reshape_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_7"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/strided_slice_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\004\000\000\000\003\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Train/Model/gradients/Train/Model/RNN/strided_slice_2_grad/Shape"
  input: "Train/Model/RNN/strided_slice_2/pack"
  input: "Train/Model/RNN/strided_slice_2/pack_1"
  input: "Train/Model/RNN/strided_slice_2/pack_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_8"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Slice_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN_8"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_9"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Slice_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN_9"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_10"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_10"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_10"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_11"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_11"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_11"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/zeros_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split/split_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Reshape"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Reshape"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_12"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Reshape_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_grad/Reshape_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_13"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/strided_slice_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\004\000\000\000\003\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Train/Model/gradients/Train/Model/RNN/strided_slice_1_grad/Shape"
  input: "Train/Model/RNN/strided_slice_1/pack"
  input: "Train/Model/RNN/strided_slice_1/pack_1"
  input: "Train/Model/RNN/strided_slice_1/pack_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_14"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Slice_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/AddN_14"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_15"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/AddN_15"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/AddN_15"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul_1"
  op: "Mul"
  input: "Train/Model/zeros"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1"
  op: "Mul"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/mul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat"
  op: "Concat"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1_grad/SigmoidGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_grad/TanhGrad"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1_grad/Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2_grad/SigmoidGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 40
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Sum"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Sum_1"
  op: "Sum"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split_grad/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Sum_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  op: "MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Reshape"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_16"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Reshape_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_grad/Reshape_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_grad/Reshape_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Slice"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Slice_1"
  op: "Slice"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/ConcatOffset:1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_17"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\004\000\000\000\003\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/RNN/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "Train/Model/gradients/Train/Model/RNN/strided_slice_grad/Shape"
  input: "Train/Model/RNN/strided_slice/pack"
  input: "Train/Model/RNN/strided_slice/pack_1"
  input: "Train/Model/RNN/strided_slice/pack_2"
  input: "Train/Model/gradients/Train/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat_grad/Slice"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Train/Model/gradients/AddN_18"
  op: "AddN"
  input: "Train/Model/gradients/Train/Model/RNN/strided_slice_2_grad/StridedSliceGrad"
  input: "Train/Model/gradients/Train/Model/RNN/strided_slice_1_grad/StridedSliceGrad"
  input: "Train/Model/gradients/Train/Model/RNN/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/strided_slice_2_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/Size"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/Shape"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/strided_slice/pack"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/strided_slice/pack_1"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/concat"
  op: "Concat"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/concat/concat_dim"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/ExpandDims"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "Train/Model/gradients/AddN_18"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/gradients/Train/Model/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "Train/Slice"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "Train/Model/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "Train/Model/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "Train/Model/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "Train/Model/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "Train/Model/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_6"
  op: "L2Loss"
  input: "Train/Model/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_7"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/L2Loss_8"
  op: "L2Loss"
  input: "Train/Model/gradients/Train/Model/add_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/pack"
  op: "Pack"
  input: "Train/Model/global_norm/L2Loss"
  input: "Train/Model/global_norm/L2Loss_1"
  input: "Train/Model/global_norm/L2Loss_2"
  input: "Train/Model/global_norm/L2Loss_3"
  input: "Train/Model/global_norm/L2Loss_4"
  input: "Train/Model/global_norm/L2Loss_5"
  input: "Train/Model/global_norm/L2Loss_6"
  input: "Train/Model/global_norm/L2Loss_7"
  input: "Train/Model/global_norm/L2Loss_8"
  attr {
    key: "N"
    value {
      i: 9
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Train/Model/global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/Sum"
  op: "Sum"
  input: "Train/Model/global_norm/pack"
  input: "Train/Model/global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/mul"
  op: "Mul"
  input: "Train/Model/global_norm/Sum"
  input: "Train/Model/global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/global_norm/global_norm"
  op: "Sqrt"
  input: "Train/Model/global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/truediv"
  op: "Div"
  input: "Train/Model/clip_by_global_norm/truediv/x"
  input: "Train/Model/global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/truediv_1"
  op: "Div"
  input: "Train/Model/clip_by_global_norm/Const"
  input: "Train/Model/clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "Train/Model/clip_by_global_norm/truediv"
  input: "Train/Model/clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul"
  op: "Mul"
  input: "Train/Model/clip_by_global_norm/mul/x"
  input: "Train/Model/clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_1"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/Reshape"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_0"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_2"
  op: "Mul"
  input: "Train/Model/gradients/AddN_17"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_1"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_3"
  op: "Mul"
  input: "Train/Model/gradients/AddN_16"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_2"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_4"
  op: "Mul"
  input: "Train/Model/gradients/AddN_13"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_3"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_5"
  op: "Mul"
  input: "Train/Model/gradients/AddN_12"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_4"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_6"
  op: "Mul"
  input: "Train/Model/gradients/AddN_7"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_5"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_7"
  op: "Mul"
  input: "Train/Model/gradients/AddN_6"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_6"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_8"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/MatMul_grad/MatMul_1"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_7"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/mul_9"
  op: "Mul"
  input: "Train/Model/gradients/Train/Model/add_grad/Reshape_1"
  input: "Train/Model/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_8"
  op: "Identity"
  input: "Train/Model/clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/gradients/Train/Model/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Model/global_step"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Model/global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Model/global_step/Assign"
  op: "Assign"
  input: "Model/global_step"
  input: "Model/global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Model/global_step/read"
  op: "Identity"
  input: "Model/global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update_Model/embedding/mul"
  op: "Mul"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_0"
  input: "Train/Model/Variable/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update_Model/embedding/ScatterSub"
  op: "ScatterSub"
  input: "Model/embedding"
  input: "Train/Model/gradients/Train/Model/embedding_lookup_grad/Reshape_1"
  input: "Train/Model/GradientDescent/update_Model/embedding/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "Train/Model/Variable/read"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "Train/Model/Variable/read"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "Train/Model/Variable/read"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "Train/Model/Variable/read"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  input: "Train/Model/Variable/read"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  input: "Train/Model/Variable/read"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update_Model/softmax_w/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/softmax_w"
  input: "Train/Model/Variable/read"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update_Model/softmax_b/ApplyGradientDescent"
  op: "ApplyGradientDescent"
  input: "Model/softmax_b"
  input: "Train/Model/Variable/read"
  input: "Train/Model/clip_by_global_norm/Train/Model/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/GradientDescent/update/NoOp"
  op: "NoOp"
  input: "^Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/ApplyGradientDescent"
  input: "^Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/ApplyGradientDescent"
  input: "^Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/ApplyGradientDescent"
  input: "^Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/ApplyGradientDescent"
  input: "^Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/ApplyGradientDescent"
  input: "^Train/Model/GradientDescent/update_Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/ApplyGradientDescent"
  input: "^Train/Model/GradientDescent/update_Model/softmax_w/ApplyGradientDescent"
  input: "^Train/Model/GradientDescent/update_Model/softmax_b/ApplyGradientDescent"
}
node {
  name: "Train/Model/GradientDescent/update/NoOp_1"
  op: "NoOp"
  input: "^Train/Model/GradientDescent/update_Model/embedding/ScatterSub"
  device: "/device:CPU:0"
}
node {
  name: "Train/Model/GradientDescent/update"
  op: "NoOp"
  input: "^Train/Model/GradientDescent/update/NoOp"
  input: "^Train/Model/GradientDescent/update/NoOp_1"
}
node {
  name: "Train/Model/GradientDescent/value"
  op: "Const"
  input: "^Train/Model/GradientDescent/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Train/Model/GradientDescent"
  op: "AssignAdd"
  input: "Model/global_step"
  input: "Train/Model/GradientDescent/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Train/Model/new_learning_rate"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Train/Model/Assign"
  op: "Assign"
  input: "Train/Model/Variable"
  input: "Train/Model/new_learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Test/TestInput/raw_data"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\003\000\000\000\000\000\000\000\001\000\000\000\006\000\000\000\003\000\000\000\000\000\000\000\004\000\000\000\002\000\000\000\005\000\000\000\000\000\000\000\004\000\000\000\007\000\000\000\005\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Test/TestInput/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "Test/TestInput/floordiv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Test/TestInput/floordiv"
  op: "Div"
  input: "Test/TestInput/Size"
  input: "Test/TestInput/floordiv/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Test/TestInput/mul"
  op: "Mul"
  input: "Test/TestInput/mul/x"
  input: "Test/TestInput/floordiv"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/TestInput/strided_slice/pack_1"
  op: "Pack"
  input: "Test/TestInput/mul"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Test/TestInput/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/TestInput/strided_slice"
  op: "StridedSlice"
  input: "Test/TestInput/raw_data"
  input: "Test/TestInput/strided_slice/pack"
  input: "Test/TestInput/strided_slice/pack_1"
  input: "Test/TestInput/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "Test/TestInput/Reshape/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "Test/TestInput/Reshape/shape"
  op: "Pack"
  input: "Test/TestInput/Reshape/shape/0"
  input: "Test/TestInput/floordiv"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Test/TestInput/Reshape"
  op: "Reshape"
  input: "Test/TestInput/strided_slice"
  input: "Test/TestInput/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/TestInput/sub"
  op: "Sub"
  input: "Test/TestInput/floordiv"
  input: "Test/TestInput/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/floordiv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Test/TestInput/floordiv_1"
  op: "Div"
  input: "Test/TestInput/sub"
  input: "Test/TestInput/floordiv_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Less"
  op: "Less"
  input: "Test/TestInput/assert_positive/Const"
  input: "Test/TestInput/floordiv_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/All"
  op: "All"
  input: "Test/TestInput/assert_positive/assert_less/Less"
  input: "Test/TestInput/assert_positive/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "Test/TestInput/assert_positive/assert_less/All"
  input: "Test/TestInput/assert_positive/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "Test/TestInput/assert_positive/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
  input: "^Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "epoch_size == 0, decrease batch_size or num_steps"
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x > 0 did not hold element-wise: x = "
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Test/TestInput/floordiv_1:0"
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "Test/TestInput/assert_positive/assert_less/All"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/TestInput/assert_positive/assert_less/All"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "Test/TestInput/floordiv_1"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/TestInput/floordiv_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/data_2"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
  input: "^Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/epoch_size"
  op: "Identity"
  input: "Test/TestInput/floordiv_1"
  input: "^Test/TestInput/assert_positive/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/input_producer/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/input_producer/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/input_producer/range"
  op: "Range"
  input: "Test/input_producer/range/start"
  input: "Test/epoch_size"
  input: "Test/input_producer/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "Test/input_producer/fraction_of_32_full/fraction_of_32_full"
  op: "FIFOQueue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Test/input_producer/fraction_of_32_full/fraction_of_32_full_EnqueueMany"
  op: "QueueEnqueueMany"
  input: "Test/input_producer/fraction_of_32_full/fraction_of_32_full"
  input: "Test/input_producer/range"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "Test/input_producer/fraction_of_32_full/fraction_of_32_full_Close"
  op: "QueueClose"
  input: "Test/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "Test/input_producer/fraction_of_32_full/fraction_of_32_full_Close_1"
  op: "QueueClose"
  input: "Test/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "Test/input_producer/fraction_of_32_full/fraction_of_32_full_Size"
  op: "QueueSize"
  input: "Test/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/input_producer/fraction_of_32_full/Cast"
  op: "Cast"
  input: "Test/input_producer/fraction_of_32_full/fraction_of_32_full_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/input_producer/fraction_of_32_full/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "Test/input_producer/fraction_of_32_full/mul"
  op: "Mul"
  input: "Test/input_producer/fraction_of_32_full/Cast"
  input: "Test/input_producer/fraction_of_32_full/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/input_producer/fraction_of_32_full/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "queue/Test/input_producer/fraction_of_32_full/fraction_of_32_full/Test/input_producer/"
      }
    }
  }
}
node {
  name: "Test/input_producer/fraction_of_32_full/ScalarSummary"
  op: "ScalarSummary"
  input: "Test/input_producer/fraction_of_32_full/ScalarSummary/tags"
  input: "Test/input_producer/fraction_of_32_full/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/fraction_of_32_full_Dequeue"
  op: "QueueDequeue"
  input: "Test/input_producer/fraction_of_32_full/fraction_of_32_full"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Test/input_producer/fraction_of_32_full/fraction_of_32_full"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "Test/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Test/mul"
  op: "Mul"
  input: "Test/fraction_of_32_full_Dequeue"
  input: "Test/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Slice/begin/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Slice/begin"
  op: "Pack"
  input: "Test/Slice/begin/0"
  input: "Test/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Test/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Slice"
  op: "Slice"
  input: "Test/TestInput/Reshape"
  input: "Test/Slice/begin"
  input: "Test/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Test/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "Test/mul_1"
  op: "Mul"
  input: "Test/fraction_of_32_full_Dequeue"
  input: "Test/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/add"
  op: "Add"
  input: "Test/mul_1"
  input: "Test/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Test/Slice_1/begin/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Slice_1/begin"
  op: "Pack"
  input: "Test/Slice_1/begin/0"
  input: "Test/add"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Test/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Slice_1"
  op: "Slice"
  input: "Test/TestInput/Reshape"
  input: "Test/Slice_1/begin"
  input: "Test/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/zeros"
  op: "Fill"
  input: "Test/Model/pack"
  input: "Test/Model/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/zeros_1"
  op: "Fill"
  input: "Test/Model/pack_1"
  input: "Test/Model/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/zeros_2"
  op: "Fill"
  input: "Test/Model/pack_2"
  input: "Test/Model/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/pack_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/zeros_3"
  op: "Fill"
  input: "Test/Model/pack_3"
  input: "Test/Model/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/pack_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/zeros_4"
  op: "Fill"
  input: "Test/Model/pack_4"
  input: "Test/Model/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/pack_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\n\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/zeros_5"
  op: "Fill"
  input: "Test/Model/pack_5"
  input: "Test/Model/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/embedding_lookup"
  op: "Gather"
  input: "Model/embedding/read"
  input: "Test/Slice"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 3
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice"
  op: "StridedSlice"
  input: "Test/Model/embedding_lookup"
  input: "Test/Model/RNN/strided_slice/pack"
  input: "Test/Model/RNN/strided_slice/pack_1"
  input: "Test/Model/RNN/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Test/Model/RNN/strided_slice"
  input: "Test/Model/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split/split_dim"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split:2"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Test/Model/zeros"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Tanh_1"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  input: "Test/Model/zeros_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split/split_dim"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split:2"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Test/Model/zeros_2"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Tanh_1"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  input: "Test/Model/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split"
  op: "Split"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split/split_dim"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split:2"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul"
  op: "Mul"
  input: "Test/Model/zeros_4"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Tanh_1"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice_1/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice_1/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice_1/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice_1"
  op: "StridedSlice"
  input: "Test/Model/embedding_lookup"
  input: "Test/Model/RNN/strided_slice_1/pack"
  input: "Test/Model/RNN/strided_slice_1/pack_1"
  input: "Test/Model/RNN/strided_slice_1/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Test/Model/RNN/strided_slice_1"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split/split_dim"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split:2"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/add_2"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Tanh_1"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split/split_dim"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split:2"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/add_2"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Tanh_1"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split"
  op: "Split"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split/split_dim"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split:2"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/add_2"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Tanh_1"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice_2/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice_2/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\003\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice_2/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/RNN/strided_slice_2"
  op: "StridedSlice"
  input: "Test/Model/embedding_lookup"
  input: "Test/Model/RNN/strided_slice_2/pack"
  input: "Test/Model/RNN/strided_slice_2/pack_1"
  input: "Test/Model/RNN/strided_slice_2/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Test/Model/RNN/strided_slice_2"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split"
  op: "Split"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split/split_dim"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split:2"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell0/BasicLSTMCell/add_2"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_1"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Tanh_1"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell0/BasicLSTMCell/mul_2"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split"
  op: "Split"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split/split_dim"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split:2"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell1/BasicLSTMCell/add_2"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_1"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Tanh_1"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat"
  op: "Concat"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat/concat_dim"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell1/BasicLSTMCell/mul_2"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 20
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul"
  op: "MatMul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/concat"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Linear/MatMul"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split"
  op: "Split"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split/split_dim"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split:2"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/add_2"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_1"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_1"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2"
  op: "Add"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_1"
  op: "Tanh"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_2"
  op: "Sigmoid"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2"
  op: "Mul"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Tanh_1"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/Sigmoid_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Test/Model/concat"
  op: "Concat"
  input: "Test/Model/concat/concat_dim"
  input: "Test/Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/mul_2"
  input: "Test/Model/RNN/MultiRNNCell_1/Cell2/BasicLSTMCell/mul_2"
  input: "Test/Model/RNN/MultiRNNCell_2/Cell2/BasicLSTMCell/mul_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\n\000\000\000"
      }
    }
  }
}
node {
  name: "Test/Model/Reshape"
  op: "Reshape"
  input: "Test/Model/concat"
  input: "Test/Model/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/MatMul"
  op: "MatMul"
  input: "Test/Model/Reshape"
  input: "Model/softmax_w/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/add"
  op: "Add"
  input: "Test/Model/MatMul"
  input: "Model/softmax_b/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/Softmax"
  op: "Softmax"
  input: "Test/Model/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Test/Model/Reshape_1"
  op: "Reshape"
  input: "Test/Slice_1"
  input: "Test/Model/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/ones"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Test/Model/sequence_loss_by_example/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Test/Model/sequence_loss_by_example/Reshape"
  op: "Reshape"
  input: "Test/Model/Reshape_1"
  input: "Test/Model/sequence_loss_by_example/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Test/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "Test/Model/add"
  input: "Test/Model/sequence_loss_by_example/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
        shape {
          dim {
            size: 12
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/sequence_loss_by_example/mul"
  op: "Mul"
  input: "Test/Model/sequence_loss_by_example/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "Test/Model/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/sequence_loss_by_example/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "Test/Model/sequence_loss_by_example/add"
  op: "Add"
  input: "Test/Model/ones"
  input: "Test/Model/sequence_loss_by_example/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/sequence_loss_by_example/truediv"
  op: "Div"
  input: "Test/Model/sequence_loss_by_example/mul"
  input: "Test/Model/sequence_loss_by_example/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "Test/Model/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Test/Model/Sum"
  op: "Sum"
  input: "Test/Model/sequence_loss_by_example/truediv"
  input: "Test/Model/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Test/Model/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.0
      }
    }
  }
}
node {
  name: "Test/Model/truediv"
  op: "Div"
  input: "Test/Model/Sum"
  input: "Test/Model/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "Model/embedding"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "Model/softmax_w"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "Model/softmax_b"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "Train/Model/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "Model/global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/pack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  attr {
    key: "N"
    value {
      i: 11
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/pack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: "Model/embedding"
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
        string_val: "Model/softmax_w"
        string_val: "Model/softmax_b"
        string_val: "Train/Model/Variable"
        string_val: "Model/global_step"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 11
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "Concat"
  input: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix/Assign"
  input: "^Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias/Assign"
  input: "^Model/softmax_w/Assign"
  input: "^Model/softmax_b/Assign"
  input: "^Train/Model/Variable/Assign"
  input: "^Model/global_step/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^Model/embedding/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
        string_val: "Model/embedding"
        string_val: "Model/global_step"
        string_val: "Model/softmax_b"
        string_val: "Model/softmax_w"
        string_val: "Train/Model/Variable"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 11
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 11
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  input: "Model/embedding"
  input: "Model/global_step"
  input: "Model/softmax_b"
  input: "Model/softmax_w"
  input: "Train/Model/Variable"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell0/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell1/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/RNN/MultiRNNCell/Cell2/BasicLSTMCell/Linear/Matrix"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 20
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/embedding"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Model/embedding"
  input: "save/restore_slice_6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/embedding"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Model/global_step"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/softmax_b"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Model/softmax_b"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_b"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Model/softmax_w"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Model/softmax_w"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Model/softmax_w"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Train/Model/Variable"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Train/Model/Variable"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Train/Model/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/Assign_6"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "Train/input_producer/fraction_of_32_full/ScalarSummary"
  input: "Test/input_producer/fraction_of_32_full/ScalarSummary"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 15
}
